{"version":3,"sources":["components/request/fetchRequest.js","components/utils/validString.js","components/registration/UserForm.js","components/utils/validZip.js","components/display/DisplayUsers.js","App.js","reportWebVitals.js","index.js"],"names":["doFetch","request","a","url","body","type","data","res","undefined","error","errorMessage","fetch","method","headers","mode","response","json","ok","console","log","JSON","stringify","validString","value","replace","length","useState","React","UserForm","initialFormState","firstName","lastName","addressOne","addressTwo","city","state","zipcode","country","formState","setFormState","validState","setValidState","errorState","setErrorState","confirmState","setConfirmState","setError","handleInputChange","e","preventDefault","id","target","val","requestBody","fetchRequest","closeModal","Modal","show","onHide","backdrop","keyboard","animation","Header","Body","Footer","Button","onClick","Container","fluid","Row","className","Form","Group","Col","xs","lg","Label","Control","onChange","placeholder","Text","muted","name","as","map","span","offset","variant","allValid","isValidFirstName","isValidLastName","isValidAddressOne","isValidCity","isValidZip","isValidState","isValidCountry","toUpperCase","validateForm","registerUser","useEffect","DisplayUsers","users","setUsers","convertTimestamp","stamp","date","Date","Number","getMonth","getDate","getFullYear","fetchUsers","Jumbotron","Table","striped","bordered","hover","size","header","user","first_name","last_name","address_one","address_two","created_date","uuid","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97495aca.chunk.js","sourcesContent":["export default async function doFetch(request) {\n  const url = request.url ? request.url : ''\n  const body = request.body ? request.body : ''\n  const type = request.type ? request.type : ''\n  let data = {\n      res: undefined,\n      error: false,\n      errorMessage: ''\n  }\n\n  if (type === \"GET\") {\n    try {\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        mode: 'cors',\n      })\n      const res = await response.json()\n      if (res && response.ok) {\n        console.log('res', res)\n        data.res = res\n        return data\n      } else {\n        data.res = res\n        data.error = true\n        data.errorMessage = res['error']\n        return data\n      }\n    } catch (error) {\n      data.error = true\n      data.errorMessage = error\n      return data\n    }\n  } else {\n    try {\n      const response = await fetch(url, {\n        method: `${type}`,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n        mode: 'cors',\n      })\n      const res = await response.json()\n      if (res && response.ok) {\n        data.res = res\n        return data\n      } else {\n          data.res = res\n        data.error = true\n        data.errorMessage = res['error']\n        return data\n      }\n  } catch (error) {\n      data.error = true\n      data.errorMessage = error\n      return data\n    }\n  }\n}\n","export default function validString(value) {\n  if (typeof(value) !== 'string') {\n    return false;\n  }\n  const spaceLessString = value.replace(/\\s/g, '');\n  if (!spaceLessString.length) {\n    return false;\n  }\n  else {\n    return true;\n  }\n}","import React from 'react'\nimport '../../App.css'\n\nimport fetchRequest from '../request/fetchRequest'\n\nimport validString from '../utils/validString'\nimport validZip from '../utils/validZip'\n\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport Row from 'react-bootstrap/Row'\n\nconst {useState} = React\n\nfunction UserForm() {\n  const initialFormState = {\n    firstName: '',\n    lastName: '',\n    addressOne: '',\n    addressTwo: '',\n    city: '',\n    state: '',\n    zipcode: '',\n    country: ''\n  }\n  const [formState, setFormState] = useState(initialFormState)\n  const initialValidState = {\n    firstName: true,\n    lastName: true,\n    addressOne: true,\n    addressTwo: true,\n    city: true,\n    state: true,\n    zipcode: true,\n    country: true\n  }\n  const [validState, setValidState] = useState(initialValidState)\n  const [errorState, setErrorState] = useState(initialFormState)\n  const [confirmState, setConfirmState] = useState(false)\n  const [error, setError] = useState('')\n\n  const states = [\n    'AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FM','FL','GA',\n    'GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA',\n    'MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND',\n    'MP','OH','OK','OR','PW','PA','PR','RI','SC','SD','TN','TX','UT',\n    'VT','VI','VA','WA','WV','WI','WY'\n   ];\n\n\n\n  const handleInputChange = (e) => {\n    e.preventDefault()\n    const id = e.target.id\n    const val = e.target.value\n    setFormState({\n      ...formState,\n      [id] : val,\n    })\n  }\n\n  const handleStateSelect = (e) => {\n    e.preventDefault()\n    const name = e.target.name\n    const val = e.target.value\n    setFormState({\n      ...formState,\n      [name] : val,\n    })\n  }\n\n  function validateForm() {\n    let allValid = true\n    let isValidFirstName = true\n    let isValidLastName = true\n    let isValidAddressOne = true\n    let isValidCity = true\n    let isValidZip = true\n    let isValidState = true\n    let isValidCountry = true\n\n    if (!validString(formState.firstName)) { isValidFirstName = false; allValid = false }\n    if (!validString(formState.lastName)) { isValidLastName = false; allValid = false }\n    if (!validString(formState.addressOne)) { isValidAddressOne = false; allValid = false }\n    if (!validString(formState.city)) { isValidCity = false; allValid = false }\n    if (!validZip(formState.zipcode)) {isValidZip = false; allValid = false}\n    if (formState.state === '' ) { isValidState = false; allValid = false }\n    if (formState.country.toUpperCase() !== 'US') { isValidCountry = false; allValid = false }\n\n    setValidState({\n      firstName: isValidFirstName,\n      lastName: isValidLastName,\n      addressOne: isValidAddressOne,\n      city: isValidCity,\n      zipcode: isValidZip,\n      state: isValidState,\n      country: isValidCountry\n    })\n\n    setErrorState({\n      ...errorState,\n      firstName: isValidFirstName ? '' : 'Please enter a valid name.',\n      lastName: isValidLastName ? '' : 'Please enter a valid name.',\n      addressOne: isValidAddressOne ? '' : 'Please enter a valid address.',\n      city: isValidCity ? '' : 'Please enter a valid city.',\n      state: isValidState ? '' : 'Please enter a valid state.',\n      zipcode: isValidZip ? '' : 'Please enter a valid zipcode.',\n      country: isValidCountry ? '' : 'Please enter \"US\"',\n    })\n\n    return allValid\n\n  }\n\n  async function registerUser() {\n    const route = 'https://0sjhqfet72.execute-api.us-east-1.amazonaws.com/dev/api/register'\n    const requestBody = formState\n\n    const data = await fetchRequest({url: route, body: requestBody, type: 'POST'})\n    if (data.error) {\n      setError(data.errorMessage)\n    } else {\n      setFormState(initialFormState)\n      setConfirmState(true)\n    }\n  }\n\n  function handleSubmit() {\n    const isValid = validateForm()\n    if (isValid) {\n      registerUser(formState)\n    }\n  }\n  \n  function handleCancel() {\n    setFormState(initialFormState)\n  }\n\n  // if (confirmState) {\n  //   return <Confirmation close={closeModal()}/>\n  //   // return <Button onClick={() => {window.location.reload()}}>success</Button>\n  // }\n\n  function closeModal() {\n    setConfirmState(false)\n  }\n\n  return (\n    <>\n      <Modal\n        show={confirmState}\n        onHide={closeModal}\n        backdrop=\"static\"\n        keyboard={false}\n        animation={false}\n      >\n        <Modal.Header>\n          Submission Confirmed\n        </Modal.Header>\n        <Modal.Body>\n          <p>\n            Thanks for submitting a new user!\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={closeModal}>\n            Create Another User\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <h1>Submit User Info</h1>\n        </Row>\n          <Form>\n            <Form.Group >\n              <Row className=\"justify-content-md-center\">\n                <Col xs lg='4'>\n                  <Form.Label>First Name: </Form.Label>\n                  <Form.Control id='firstName' value={formState.firstName} onChange={handleInputChange} type='text' placeholder='example: John'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.firstName ? '' : errorState.firstName}\n                  </Form.Text>\n                </Col>\n                <Col xs lg='4'>\n                  <Form.Label>Last Name: </Form.Label>\n                  <Form.Control id='lastName' value={formState.lastName} onChange={handleInputChange} type='text' placeholder='example: Smith'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.lastName ? '' : errorState.lastName}\n                  </Form.Text>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col xs lg='4'>\n                  <Form.Label>Address 1: </Form.Label>\n                  <Form.Control id='addressOne' value={formState.addressOne} onChange={handleInputChange} type='text' placeholder='example: 123 Washington Avenue'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.addressOne ? '' : errorState.addressOne}\n                  </Form.Text>\n                  <Form.Label>Address 2: </Form.Label>\n                  <Form.Control id='addressTwo' value={formState.addressTwo} onChange={handleInputChange} type='text' placeholder='example: Apt 1'/>\n                  <Form.Text className=\"warningText\" muted>\n                  </Form.Text>\n                  <Form.Label>City: </Form.Label>\n                  <Form.Control id='city' value={formState.city} onChange={handleInputChange} type='text' placeholder='example: New York City'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.city ? '' : errorState.city}\n                  </Form.Text>\n                </Col>\n                <Col xs lg='4'>\n                  <Form.Label>Zip: </Form.Label>\n                  <Form.Control id='zipcode' value={formState.zipcode} onChange={handleInputChange} type='text' placeholder='example: 5 or 9 digits'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.zipcode ? '' : errorState.zipcode}\n                  </Form.Text>\n                  <Form.Label>State: </Form.Label>\n                  <Form.Control  name='state' value={formState.state} onChange={handleStateSelect} as='select'>\n                    <option>Please Select a State</option>\n                    {states.map(state =>\n                      <option key={state}>{state}</option>\n                    )}\n                  </Form.Control>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.state ? '' : errorState.state}\n                  </Form.Text>\n                  <Form.Label>Country: </Form.Label>\n                  <Form.Control id='country' value={formState.country} onChange={handleInputChange} type='text' placeholder='example: Please Enter \"US\"'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.country ? '' : errorState.country}\n                  </Form.Text>\n                </Col>\n              </Row>\n            </Form.Group>\n            <Row className='buttons'>\n              <Col xs lg={{ span: 4, offset: 8 }}>\n                <Button className='button' variant='secondary' onClick={handleCancel}>Clear Form</Button>\n                <Button className='button' variant='dark' onClick={handleSubmit}>Submit</Button>\n              </Col>\n            </Row>\n          </Form>\n      </Container>\n  </>\n  )\n}\n\nexport default UserForm;","export default function validString(value) {\n  if (!value) {\n    return false\n  }\n  if (value.length < 5) {\n    return false\n  }\n  if (value.length > 5 && value.length !== 9) {\n    return false\n  } else {\n    return true\n  }\n}","import React from 'react'\n\nimport fetchRequest from '../request/fetchRequest'\n\nimport Container from 'react-bootstrap/Container'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Table from 'react-bootstrap/Table'\n\nconst {useState, useEffect} = React\n\nfunction DisplayUsers() {\n  const [users, setUsers] = useState([])\n  const headers = [\n    'First Name', 'Last Name', 'Address 1', 'Address 2',\n    'City', 'State', 'Zip', 'Country', 'Date Added'\n  ]\n\n  useEffect(() => {\n    console.log('rendered')\n    async function fetchUsers() {\n      console.log('calling')\n      const route = 'https://0sjhqfet72.execute-api.us-east-1.amazonaws.com/dev/api/admin'\n\n      const data = await fetchRequest({url: route, type: 'GET'})\n\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        console.log(data)\n        setUsers(data.res.users)\n        \n      }\n    }\n    fetchUsers()\n  }, [])\n\n  function convertTimestamp(stamp) {\n    let date = new Date(Number(stamp) * 1000)\n    date = (date.getMonth()+1)+'/'+date.getDate()+'/'+date.getFullYear()\n    return date\n  }\n\n  return (\n    <>\n      <Container fluid>\n        <Jumbotron id='jumbo'><h1>Admin View</h1></Jumbotron>\n        <Table striped bordered hover size='sm'>\n          <thead>\n            <tr>\n              {headers.map(header =>\n                <th key={header}>{header}</th>  \n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {users.map(user => \n              <tr key={user.uuid[\"S\"]}>\n                <td className='usersCell'>{user.first_name[\"S\"]}</td>\n                <td className='usersCell'>{user.last_name[\"S\"]}</td>\n                <td className='usersCell'>{user.address_one[\"S\"]}</td>\n                <td className='usersCell'>{user.address_two[\"S\"]}</td>\n                <td className='usersCell'>{user.city[\"S\"]}</td>\n                <td className='usersCell'>{user.state[\"S\"]}</td>\n                <td className='usersCell'>{user.zipcode[\"S\"]}</td>\n                <td className='usersCell'>{user.country[\"S\"]}</td>\n                <td className='usersCell'>{convertTimestamp(user.created_date[\"N\"])}</td>\n              </tr>  \n            )}\n          </tbody>\n        </Table>\n      </Container>\n    </>\n  )\n}\n\nexport default DisplayUsers;","import './App.css';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport UserForm from './components/registration/UserForm'\nimport DisplayUsers from './components/display/DisplayUsers'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <div id='container'>\n          <Switch>\n            <Route exact path='/admin'>\n              <DisplayUsers />\n            </Route>\n            <Route exact path='/'>\n              <UserForm />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}