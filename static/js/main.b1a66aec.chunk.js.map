{"version":3,"sources":["components/request/SubmitForm.js","components/registration/UserForm.js","App.js","reportWebVitals.js","index.js"],"names":["props","a","reqBody","fullDomain","window","location","href","domain","split","slice","join","console","log","fetch","method","headers","body","JSON","stringify","response","json","res","ok","useState","React","UserForm","initialFormState","firstName","lastName","addressOne","addressTwo","city","state","zip","country","formState","setFormState","validState","errorState","confirmState","setConfirmState","handleInputChange","e","preventDefault","id","target","val","value","Button","onClick","reload","Container","fluid","Row","className","Form","Group","Col","xs","lg","Label","Control","onChange","type","placeholder","Text","muted","address1","address2","as","map","span","offset","variant","SubmitForm","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1a66aec.chunk.js","sourcesContent":["export default async function SubmitForm(props) {\n  const {reqBody} = props\n  const fullDomain = window.location.href\n  const domain = fullDomain.split('/').slice(0,4).join('/')\n  console.log('domain', domain)\n  const url = 'https://ql0ugv7001.execute-api.us-east-1.amazonaws.com/dev/register'\n  const requestType = 'POST'\n  const response = await fetch(url, {\n    method: requestType,\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': domain,\n    },\n    body: JSON.stringify(reqBody),\n  })\n  const res = await response.json()\n  if (res && response.ok) {\n    console.log('res', res)\n  } else {\n    console.log('error', res)\n  }\n}","import React from 'react'\nimport '../../App.css'\nimport Confirmation from '../confirmation/Confirmation'\nimport SubmitForm from '../request/SubmitForm'\n\nimport validString from '../utils/validString'\nimport validZip from '../utils/validZip'\n\nimport Button from 'react-bootstrap/Button'\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nconst {useState} = React\n\nfunction UserForm() {\n  const initialFormState = {\n    firstName: '',\n    lastName: '',\n    addressOne: '',\n    addressTwo: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: ''\n  }\n  const [formState, setFormState] = useState(initialFormState)\n  const initialValidState = {\n    firstName: true,\n    lastName: true,\n    addressOne: true,\n    addressTwo: true,\n    city: true,\n    state: true,\n    zip: true,\n    country: true\n  }\n  const [validState, setValidState] = useState(initialValidState)\n  const [errorState, setErrorState] = useState(initialFormState)\n  const [confirmState, setConfirmState] = useState(false)\n\n  const states = [\n    'AL','AK','AS','AZ','AR','CA','CO','CT','DE','DC','FM','FL','GA',\n    'GU','HI','ID','IL','IN','IA','KS','KY','LA','ME','MH','MD','MA',\n    'MI','MN','MS','MO','MT','NE','NV','NH','NJ','NM','NY','NC','ND',\n    'MP','OH','OK','OR','PW','PA','PR','RI','SC','SD','TN','TX','UT',\n    'VT','VI','VA','WA','WV','WI','WY'\n   ];\n\n\n\n  const handleInputChange = (e) => {\n    e.preventDefault()\n    const id = e.target.id\n    const val = e.target.value\n\n    setFormState({\n      ...formState,\n      [id] : val,\n    })\n\n  }\n\n  function validateForm() {\n    let allValid = true\n    let isValidFirstName = true\n    let isValidLastName = true\n    let isValidAddressOne = true\n    let isValidCity = true\n    let isValidZip = true\n    let isValidCountry = true\n\n    if (!validString(formState.firstName)) { isValidFirstName = false; allValid = false }\n    if (!validString(formState.lastName)) { isValidLastName = false; allValid = false }\n    if (!validString(formState.addressOne)) { isValidAddressOne = false; allValid = false }\n    if (!validString(formState.city)) { isValidCity = false; allValid = false }\n    // FIXME: if xip length > 5 then it has to equal 9\n    if (!validZip(formState.zip)) {isValidZip = false; allValid = false}\n    if (formState.country !== 'US') { isValidCountry = false; allValid = false }\n\n    setValidState({\n      firstName: isValidFirstName,\n      lastName: isValidLastName,\n      addressOne: isValidAddressOne,\n      city: isValidCity,\n      zip: isValidZip,\n      country: isValidCountry\n    })\n\n    setErrorState({\n      ...errorState,\n      firstName: isValidFirstName ? '' : 'Please enter a valid name.',\n      lastName: isValidLastName ? '' : 'Please enter a valid name.',\n      addressOne: isValidAddressOne ? '' : 'Please enter a valid address.',\n      city: isValidCity ? '' : 'Please enter a valid city.',\n      zip: isValidZip ? '' : 'Please enter a valid zipcode.',\n      country: isValidCountry ? '' : 'Please enter \"US\"',\n    })\n\n    return allValid\n\n  }\n\n  function handleSubmit() {\n    const isValid = true\n    if (isValid) {\n      SubmitForm(formState)\n      setFormState(initialFormState)\n      setConfirmState(true)\n    }\n  }\n  \n  function handleCancel() {\n    setFormState(initialFormState)\n  }\n\n  if (confirmState) {\n    // return <Confirmation />\n    return <Button onClick={() => {window.location.reload()}}>success</Button>\n  }\n\n  return (\n    <>\n      <Container fluid>\n        <Row className=\"justify-content-md-center\">\n          <h1>Submit User Info</h1>\n        </Row>\n          <Form>\n            <Form.Group >\n              <Row className=\"justify-content-md-center\">\n                <Col xs lg='4'>\n                  <Form.Label>First Name: </Form.Label>\n                  <Form.Control id='firstName' value={formState.firstName} onChange={handleInputChange} type='text' placeholder='example: John'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.firstName ? '' : errorState.firstName}\n                  </Form.Text>\n                </Col>\n                <Col xs lg='4'>\n                  <Form.Label>Last Name: </Form.Label>\n                  <Form.Control id='lastName' value={formState.lastName} onChange={handleInputChange} type='text' placeholder='example: Smith'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.lastName ? '' : errorState.lastName}\n                  </Form.Text>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-md-center\">\n                <Col xs lg='4'>\n                  <Form.Label>Address 1: </Form.Label>\n                  <Form.Control id='addressOne' value={formState.address1} onChange={handleInputChange} type='text' placeholder='example: 123 Washington Avenue'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.address1 ? '' : errorState.address1}\n                  </Form.Text>\n                  <Form.Label>Address 2: </Form.Label>\n                  <Form.Control id='addressTwo' value={formState.address2} onChange={handleInputChange} type='text' placeholder='example: Apt 1'/>\n                  <Form.Text className=\"warningText\" muted>\n                  </Form.Text>\n                  <Form.Label>City: </Form.Label>\n                  <Form.Control id='city' value={formState.city} onChange={handleInputChange} type='text' placeholder='example: New York City'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.city ? '' : errorState.city}\n                  </Form.Text>\n                </Col>\n                <Col xs lg='4'>\n                  <Form.Label>Zip: </Form.Label>\n                  <Form.Control id='zip' value={formState.zip} onChange={handleInputChange} type='text' placeholder='example: 5 or 9 digits'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.zip ? '' : errorState.zip}\n                  </Form.Text>\n                  <Form.Label>State: </Form.Label>\n                  <Form.Control onChange={handleInputChange} as='select'>\n                    <option id='state' value='default'>Please Select a State</option>\n                    {states.map(state =>\n                      <option id='state' value={formState.state} key={state}>{state}</option>\n                    )}\n                  </Form.Control>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.state ? '' : errorState.state}\n                  </Form.Text>\n                  <Form.Label>Country: </Form.Label>\n                  <Form.Control id='country' value={formState.country} onChange={handleInputChange} type='text' placeholder='example: Please Enter \"US\"'/>\n                  <Form.Text className=\"warningText\" muted>\n                    {validState.country ? '' : errorState.country}\n                  </Form.Text>\n                </Col>\n              </Row>\n            </Form.Group>\n            <Row className='buttons'>\n              <Col xs lg={{ span: 4, offset: 8 }}>\n                <Button className='button' variant='secondary' onClick={handleCancel}>Clear Form</Button>\n                <Button className='button' variant='dark' onClick={handleSubmit}>Submit</Button>\n              </Col>\n            </Row>\n          </Form>\n      </Container>\n    </>\n  )\n}\n\nexport default UserForm;","import UserForm from './components/registration/UserForm'\nimport './App.css';\nimport { BrowserRouter as Route} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <>\n      <Route exact path='/'>\n        <UserForm />\n      </Route>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}